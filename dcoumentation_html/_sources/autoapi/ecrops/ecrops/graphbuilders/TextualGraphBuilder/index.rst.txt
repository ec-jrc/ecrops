:py:mod:`ecrops.ecrops.graphbuilders.TextualGraphBuilder`
=========================================================

.. py:module:: ecrops.ecrops.graphbuilders.TextualGraphBuilder


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ecrops.ecrops.graphbuilders.TextualGraphBuilder.TextualGraphBuilder




.. py:class:: TextualGraphBuilder(output_file=None)

   Bases: :py:obj:`ecrops.graphbuilders.AbstractGraphBuilder.AbstractGraphBuilder`

   Example implementation of AbstractGraphBuilder.
   This builder writes in textual from the structure of the steps and their connections.
   In the constructor the user should provide the path to the output file. If output file is None (default behaviour) the builder prints the text to the console

   .. py:method:: initialize()

      Initialize the graph builder
      :return:


   .. py:method:: addStepNode(step_name, step_class_instance, step_parameters_dict, step_description)

      Adds a step to the graph
      :param step_name: step name
      :param step_class_instance: instance of the step class
      :param step_parameters_dict: the dictionary containing the step's parameters
      :param step_description: step's description
      :return:


   .. py:method:: addEdge(to_step_name, from_step_name, common_variables)

      Adds an edge between two steps
      :param to_step_name: inbound step name
      :param from_step_name: outbound step name
      :param common_variables: list of common variables that link the two steps
      :return:


   .. py:method:: finalize(config_file, runMode)

      Create/display/plot the graph
      :param config_file : path to the workflow configuration file
      :param runMode : selected runmode
      :return:



